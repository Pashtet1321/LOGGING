"""
Django settings for project project.

Generated by 'django-admin startproject' using Django 4.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-ogwjk*8w)6tq@*cj7*(^+3j^-v52xnd*!y=bg=cna!v%ycyyz+'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

LOCALE_PATHS = [
    os.path.join(BASE_DIR, 'locale')
]

INSTALLED_APPS = [
    'django_apscheduler',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'simpleapp',
    'django.contrib.sites',
    'django.contrib.flatpages',
    'news.apps.NewsConfig',
    'django_filters',
    'accounts',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.yandex',

]

SITE_ID = 1

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.contrib.flatpages.middleware.FlatpageFallbackMiddleware'
]

ACCOUNT_FORMS = {"signup": "accounts.forms.CustomSignupForm"}
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_UNIQUE_EMAIL = True
ACCOUNT_USERNAME_REQUIRED = False
ACCOUNT_AUTHENTICATION_METHOD = 'email'
ACCOUNT_EMAIL_VERIFICATION = 'none'
ROOT_URLCONF = 'project.urls'

SITE_URL = 'http://127.0.0.1:8000'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]
AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
]

WSGI_APPLICATION = 'project.wsgi.application'
LOGIN_REDIRECT_URL = "/products"

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.yandex.ru'
EMAIL_PORT = 465
EMAIL_HOST_USER = "pashtet1321"
EMAIL_HOST_PASSWORD = "xlsfrabeqdodckzd"
# EMAIL_SUBJECT_PREFIX = "любое названия в начале темы письма "
EMAIL_USE_TLS = False
EMAIL_USE_SSL = True
DEFAULT_FROM_EMAIL = "pashtet1321@yandex.ru"
SERVER_EMAIL = "pashtet1321@yandex.ru"

APSCHEDULER_DATETIME_FORMAT = 'N j, Y, f:s a'
APSCHEDULER_RUN_NOW_TIMEOUT = 25

MANAGERS = (
    ('Ivan', 'ivan@yandex.ru'),
    ('Petr', 'petr@yandex.ru'),
)
ADMINS = (
    ('anton', 'anton@yandex.ru'),
)

LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True


STATICFILES_DIRS = [
    BASE_DIR / "static"
]
STATIC_URL = '/static/'

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

CELERY_BROKER_URL = f'redis://default:DdmUbrM3SaUU2Q2kiOSC61iIJllQlCM6@redis-17215.c11.us-east-1-2.ec2.cloud' \
                    f'.redislabs.com:17215 '
CELERY_RESULT_BACKEND = f'redis://default:DdmUbrM3SaUU2Q2kiOSC61iIJllQlCM6@redis-17215.c11.us-east-1-2.ec2.cloud' \
                    f'.redislabs.com:17215'
CELERY_ACCEPT_CONTENT = ['application/json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'

CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.filebased.FileBasedCache',
        'LOCATION': os.path.join(BASE_DIR, 'cache_files'),
    }
}

LOGGING = {
    'version': 1,
    'disable_existing_logeers': False,

    'formatters': {
        'main_format': {
            'format': '%{asctime}s - %{levelname}s - %{message}s',
            'style': '{',
        },
        'main_format2': {
            'format': '%{asctime}s - %{levelname}s - %{message}s - %{pathname}s',
            'style': '{',
        },
        'main_format3': {
            'format': '%{asctime}s - %{levelname}s - %{message}s - %{pathname}s - %{exc_info}s',
            'style': '{',
        },
        'main_format4': {
            'format': '%{asctime}s - %{levelname}s - %{module}s - %{message}s',
            'style': '{',
        },
    },

    'filters': {
        'require_debug_true': {
            '()': 'django.utils.log.RequireDebugTrue',
        },
        'require_debug_false': {
            '()': 'django.utils.log.RequireDebugFalse',
        },
    },
    'handlers': {
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'main_format',
        },
        'console1': {
            'level': 'WARNING',
            'class': 'logging.StreamHandler',
            'formatter': 'main_format2',
        },
        'console2': {
            'level': 'ERROR',
            'class': 'logging.StreamHandler',
            'formatter': 'main_format3',
        },
        'console3': {
            'level': 'CRITICAL',
            'class': 'logging.StreamHandler',
            'formatter': 'main_format4',
        },

        'file': {
            'level': 'INFO',
            'filters': ['require_debug_true'],
            'class': 'logging.FileHandler',
            'filename': 'general.log',
            'formatter': 'main_format4',
        },
        'file2': {
            'level': 'ERROR',
            'filters': ['require_debug_true'],
            'class': 'logging.FileHandler',
            'filename': 'errors.log',
            'formatter': 'main_format3',
        },
        'file3': {
            'level': 'INFO',
            'filters': ['require_debug_true'],
            'class': 'logging.FileHandler',
            'filename': 'security.log',
            'formatter': 'main_format4',
        },
        'mail_admins': {
            'level': 'ERROR',
            'class': 'django.utils.log.AdminEmailHandler',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['console', 'console2', 'console3', 'console4', 'file'],
            'level': 'DEBUG',
            'propagate': True
        },
        'django.request': {
            'handlers': ['mail_admins', 'file2'],
            'level': 'ERROR',
            'propagate': False
        },
        'django.server': {
            'level': 'ERROR',
            'filename': 'errors.log',
            'handlers': ['mail_admins', 'file2'],
            'formatter': 'main_format3',
            'propagate': False
        },
        'django.template': {
            'level': 'ERROR',
            'filename': 'errors.log',
            'handlers': ['fil2'],
            'formatter': 'main_format3',
            'propagate': False
        },
        'django.db.backends': {
            'level': 'ERROR',
            'filename': 'errors.log',
            'handlers': ['file'],
            'formatter': 'main_format3',
            'propagate': False
        },
        'django.security': {
            'level': 'INFO',
            'filename': 'errors.log',
            'handlers': ['file3'],
            'formatter': 'main_format3',
            'propagate': False
        },
    },
}
